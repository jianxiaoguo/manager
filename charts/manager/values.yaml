imageOrg: "drycc"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"
imagePullPolicy: "Always"
# Set manager deployment replicas
replicas: 1
# limitsCpu: "100m"
# limitsMemory: "50Mi"
# Set manager cronjob concurrencyPolicy
# Allow (default): The cron job allows concurrently running jobs
# Forbid: The cron job does not allow concurrent runs; if it is time for a new job run and the previous job run hasn't finished yet, the cron job skips the new job run
# Replace: If it is time for a new job run and the previous job run hasn't finished yet, the cron job replaces the currently running job run with a new job run
concurrencyPolicy: "Replace"

## Enable diagnostic mode
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers
  ##
  args:
    - infinity

api:
  nodeAffinityPreset:
    key: "drycc.cc/node"
    type: "soft"
    values:
    - "true"
  podAffinityPreset:
    type: ""
    extraMatchLabels:
      security: "drycc-security"
  podAntiAffinityPreset:
    type: "soft"
    extraMatchLabels:
      app: "drycc-manager"

celery:
  nodeAffinityPreset:
    key: "drycc.cc/node"
    type: "soft"
    values:
    - "true"
  podAffinityPreset:
    type: ""
    extraMatchLabels:
      security: "drycc-security"
  podAntiAffinityPreset:
    type: "soft"
    extraMatchLabels:
      app: "drycc-manager-celery"

# Service
service:
  # Provide any additional service annotations
  annotations: {}

# external service configuration
valkeyUrl: ""
databaseUrl: ""
databaseReplicaUrl: ""
passportUrl: ""
passportKey: ""
passportSecret: ""

# stripe config
stripePublicKey: ""
stripeSecretKey: ""
stripeWebhookSecret: ""

# The following configurations are used to initialize the clusters
initClusters:
# - name: local
#   url: "https://drycc.drycc.com"
#   key: "f8cde499-9f58-4b3e-81ad-c0f95e5db282"
#   secret: "JcxoPGxG9fIiwUbTPcrk0wzU1nQvlCZRJ5ZyNvhyCdby9OFVVbcPGvgdLFUGZRyp"

# xterm pod configuration
xtermPodTimeout: 1800
xtermPodImageTag: canary
xtermPodTemplate:
  apiVersion: v1
  kind: Pod
  metadata:
    namespace: "{{ .Release.Namespace }}"
  spec:
    containers:
    - image: registry.drycc.cc/drycc/workflow-cli:{{ .Values.xtermPodImageTag }}
      name: xterm
      args:
      - wait
    restartPolicy: Never

environment:
  ADMIN_ENABLED: true
  LEGAL_ENABLED: false

# The following is the configuration of external dependent services.
# Including Valkey, database and passport.
valkey:
  enabled: true
  # The addrs parameters are configured only when using an off-cluster Valkey instance
  addrs: "" # A list of clusters: "127.0.0.1:7001/1,127.0.0.2:7002/1"
  password: "valkey password" # "" == no password
  persistence:
    enabled: false # Set to true to enable persistence
    size: 5Gi
    storageClass: ""

database:
  enabled: true
  # The following parameters are configured only when using an on-cluster Database instance
  # The username and password to be used by the on-cluster database.
  # If left empty they will be generated
  # The user name should be set to lowercase letters 
  superuser: "postgres"
  superuserPassword: ""
  replicator: "standby"
  replicatorPassword: ""
  user: ""
  password: ""
  initDatabases: "manager,passport"
  persistence:
    enabled: false # Set to true to enable persistence
    size: 5Gi # PVC size
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ## Storage class of PV to bind. By default it looks for standard storage class.
    ## If the PV uses a different storage class, specify that here.
    storageClass: ""

passport:
  enabled: true
  # The following parameters are configured only when using an on-cluster passport
  # Set passport deployment replicas
  replicas: 1
  ## databaseUrl and databaseReplicaUrl are will no longer use the built-in database component
  databaseUrl: ""
  databaseReplicaUrl: ""
  # The following configurations to initialize oauth2 application
  # Names are all lowercase letters
  # The key and secret are generated automatically if they are empty
  # If prefix is not empty, it represents internal application.
  initApplications:
  - name: "manager"
    key: ""
    secret: ""
    prefix: "drycc-manager"
    redirect_uri: "/v1/complete/drycc/"

# Drycc Gateway is a gateway chart that integrates cert-manager.
gateway:
  enabled: true
  # acme configuration takes effect if and only if certManagerEnabled is true
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    # EAB credentials
    externalAccountBinding:
      keyID: ""
      keySecret: ""
  # gateway apps
  apps:
  - name: drycc-passport
    port: 80
    hostname: drycc-passport.{{ .Values.global.platformDomain }}
    protocol: HTTP
    services:
    - name: drycc-passport
      port: 80
  - name: drycc-manager
    port: 80
    hostname: drycc-manager.{{ .Values.global.platformDomain }}
    protocol: HTTP
    services:
    - name: drycc-manager
      port: 80

global:
  # Set the location of Workflow's PostgreSQL database
  #
  # Valid values are:
  # - on-cluster: Run PostgreSQL within the Kubernetes cluster (credentials are generated
  #   automatically; backups are sent to object storage
  #   configured above)
  # - off-cluster: Run PostgreSQL outside the Kubernetes cluster
  databaseLocation: "on-cluster"
  # Set the location of Workflow's Valkey instance
  #
  # Valid values are:
  # - on-cluster: Run Valkey within the Kubernetes cluster
  # - off-cluster: Run Valkey outside the Kubernetes cluster (configure in valkey section)
  valkeyLocation: "on-cluster"
  # Set the location of Workflow's passport
  #
  # Valid values are:
  # - on-cluster: Run passport within the Kubernetes cluster
  # - off-cluster: Use passport outside the Kubernetes cluster
  passportLocation: "on-cluster"
  # Please check `kubernetes.io/ingress.class`
  ingressClass: ""
  # A domain name consists of one or more parts.
  # Periods (.) are used to separate these parts.
  # Each part must be 1 to 63 characters in length and can contain lowercase letters, digits, and hyphens (-).
  # It must start and end with a lowercase letter or digit.
  clusterDomain: "cluster.local"
  # The public resolvable hostname to build your cluster with.
  #
  # This will be the hostname that is used to build endpoints such as "drycc.$HOSTNAME"
  platformDomain: ""
  # Whether cert_manager is enabled to automatically generate manager certificates
  certManagerEnabled: false
